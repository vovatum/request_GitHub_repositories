{"version":3,"sources":["utils/folowRounder.js","components/User.jsx","api/githubApi.js","state/errorsReducer.js","state/statusReducer.js","state/reposReducer.js","components/Preloader.jsx","components/Repos.jsx","components/Status.jsx","components/ReposContainer.jsx","components/UserContainer.jsx","state/userReducer.js","components/EnterField.jsx","components/Header.jsx","components/HeaderContainer.jsx","App.jsx","reportWebVitals.js","state/store.js","index.js"],"names":["followRounder","num","numToArr","toString","split","length","slice","join","User","props","followers","userData","user","following","className","src","avatar_url","alt","name","href","html_url","target","without","rel","login","icon","faUserFriends","faUser","id","instance","axios","create","baseURL","githubApi","userName","get","perPage","page","initialState","fetchUserError","fetchReposError","SET_FETCH_USER_ERROR","SET_FETCH_REPOS_ERROR","setFetchUserErrorAC","error","type","setFetchReposErrorAC","isFetchingUser","isFetchingRepos","IS_FETCHING_USER","IS_FETCHING_REPOS","isFetchingUserAC","isFetching","isFetchingReposAC","repos","currentPage","SET_REPOS","SET_CURRENT_PAGE","setReposAC","Preloader","Repos","pageCount","Math","ceil","numRepos","reposData","leftNumPagination","rightNumPagination","items","map","repo","description","containerClassName","activeClassName","previousLabel","previousLinkClassName","nextLabel","nextLinkClassName","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","setCurrentPage","subContainerClassName","forcePage","Status","statusMessage","errors","faIcon","ReposContainer","useSelector","state","status","dispatch","useDispatch","useEffect","then","res","data","owner","catch","faTimesCircle","public_repos","numPage","setCurrentPageAC","UserContainer","faSearch","SET_USER","SET_USER_NAME","setUserAC","EnterField","useState","title","setTitle","editMode","setEditMode","value","onChange","event","currentTarget","onKeyPress","key","trim","setUserName","toLocaleLowerCase","autoFocus","onClick","Header","faGithubSquare","HeaderContainer","fetchUserTC","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5be12e92.chunk.js","sourcesContent":["export const followRounder = (num) => {\r\n    let numToArr = num.toString().split('')\r\n    if (numToArr.length > 9) {\r\n        return 'billion+'\r\n    } else if (numToArr.length > 6) {\r\n        if (numToArr.slice(numToArr.length - 6, numToArr.length - 5).toString() === '0') {\r\n            return numToArr.slice(0, numToArr.length - 6).join('') + 'm'\r\n        } else {\r\n            return numToArr.slice(0, numToArr.length - 6).join('') + '.'\r\n                + numToArr.slice(numToArr.length - 6, numToArr.length - 5) + 'm'\r\n        }\r\n    } else if (numToArr.length > 3) {\r\n        if (numToArr.slice(numToArr.length - 3, numToArr.length - 2).toString() === '0') {\r\n            return numToArr.slice(0, numToArr.length - 3).join('') + 'k'\r\n        } else {\r\n            return numToArr.slice(0, numToArr.length - 3).join('') + '.'\r\n                + numToArr.slice(numToArr.length - 3, numToArr.length - 2) + 'k'\r\n        }\r\n    } else {\r\n        return num.toString()\r\n    }\r\n}","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faUser, faUserFriends} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {followRounder} from \"../utils/folowRounder\";\r\n\r\n\r\nexport function User(props) {\r\n\r\n    const followers = followRounder(props.userData.user.followers)\r\n    const following = followRounder(props.userData.user.following)\r\n\r\n    return (\r\n        <div className={'userData'} key={props.userData.user.id}>\r\n            <img className={'userPhoto'}\r\n                 src={props.userData.user.avatar_url} alt={\"avatar\"}/>\r\n            <div>\r\n                <h2 className={'userFullName'}>{props.userData.user.name}</h2>\r\n                <h4 className={'userName'}>\r\n                    <a className={'userName'} href={props.userData.user.html_url} target=\"_blank\" without\r\n                       rel=\"noreferrer\">{props.userData.user.login}</a>\r\n                </h4>\r\n\r\n                <div className={'followContainer'}>\r\n                    <div>\r\n                        <FontAwesomeIcon className={'userIcon'} icon={faUserFriends}/>\r\n                        <span className={'follow'}>{followers} followers</span>\r\n                    </div>\r\n                    <div>\r\n                        <FontAwesomeIcon className={'userIcon'} icon={faUser}/>\r\n                        <span className={'follow'}>{following} following</span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.github.com/users/'\r\n})\r\n\r\n\r\nexport const githubApi = {\r\n    getUser(userName) {\r\n        return instance.get(`${userName}`)\r\n    },\r\n    getRepos(userName, perPage, page) {\r\n        return instance.get(`${userName}/repos?per_page=${perPage}&page=${page}`)\r\n    },\r\n    getAllRepos(userName) {\r\n        return instance.get(`${userName}/repos`)\r\n    }\r\n}","const initialState = {\r\n    fetchUserError: false,\r\n    fetchReposError: false\r\n}\r\n\r\nconst SET_FETCH_USER_ERROR = 'SET_FETCH_USER_ERROR'\r\nconst SET_FETCH_REPOS_ERROR = 'SET_FETCH_REPOS_ERROR'\r\n\r\n\r\nexport const errorsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FETCH_USER_ERROR:\r\n            return {\r\n                ...state,\r\n                fetchUserError: action.error\r\n            }\r\n        case SET_FETCH_REPOS_ERROR:\r\n            return {\r\n                ...state,\r\n                fetchReposError: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setFetchUserErrorAC = (error) => {\r\n    return {type: SET_FETCH_USER_ERROR, error}\r\n}\r\nexport const setFetchReposErrorAC = (error) => {\r\n    return {type: SET_FETCH_REPOS_ERROR, error}\r\n}\r\n","const initialState = {\r\n    isFetchingUser: false,\r\n    isFetchingRepos: false,\r\n}\r\n\r\nconst IS_FETCHING_USER = 'IS_FETCHING_USER'\r\nconst IS_FETCHING_REPOS = 'IS_FETCHING_REPOS'\r\n\r\n\r\nexport const statusReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case IS_FETCHING_USER:\r\n            return {\r\n                ...state,\r\n                isFetchingUser: action.isFetching\r\n            }\r\n        case IS_FETCHING_REPOS:\r\n            return {\r\n                ...state,\r\n                isFetchingRepos: action.isFetching\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const isFetchingUserAC = (isFetching) => {\r\n    return {type: IS_FETCHING_USER, isFetching}\r\n}\r\nexport const isFetchingReposAC = (isFetching) => {\r\n    return {type: IS_FETCHING_REPOS, isFetching}\r\n}\r\n","import {githubApi} from \"../api/githubApi\";\r\nimport {setFetchReposErrorAC} from \"./errorsReducer\";\r\nimport {isFetchingReposAC} from \"./statusReducer\";\r\n\r\n\r\nconst initialState = {\r\n    repos: [],\r\n    currentPage: 1,\r\n    perPage: 4\r\n}\r\n\r\nconst SET_REPOS = 'SET_REPOS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\n\r\nexport const reposReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: [...action.repos]\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.numPage\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setReposAC = (repos) => {\r\n    return {type: SET_REPOS, repos}\r\n}\r\nexport const setCurrentPageAC = (numPage) => {\r\n    return {type: SET_CURRENT_PAGE, numPage}\r\n}\r\n\r\nexport const fetchReposTC = (userName, perPage, page) => (dispatch) => {\r\n    dispatch(isFetchingReposAC(true))\r\n    githubApi.getRepos(userName, perPage, page)\r\n        .then(res => {\r\n            if (res.data[0].owner.login === userName) {\r\n                dispatch(setReposAC(res.data))\r\n                dispatch(setFetchReposErrorAC(false))\r\n                dispatch(isFetchingReposAC(false))\r\n            }\r\n        })\r\n        .catch(() => {\r\n            dispatch(setReposAC([]))\r\n            dispatch(setFetchReposErrorAC(true))\r\n            dispatch(isFetchingReposAC(false))\r\n\r\n        })\r\n}","import '../styles/some.scss'\r\n\r\n\r\nexport function Preloader() {\r\n\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}","import '../styles/pagination.scss'\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n\r\nexport function Repos(props) {\r\n\r\n    const pageCount = Math.ceil(props.numRepos / props.reposData.perPage)\r\n\r\n    const leftNumPagination = (props.reposData.currentPage - 1) * props.reposData.perPage + 1\r\n    const rightNumPagination = props.reposData.currentPage * props.reposData.perPage >= props.numRepos\r\n        ? props.numRepos\r\n        : props.reposData.currentPage * props.reposData.perPage\r\n\r\n    const items = rightNumPagination === props.numRepos\r\n        ? `${rightNumPagination} of ${props.numRepos} items`\r\n        : `${leftNumPagination} - ${rightNumPagination} of ${props.numRepos} items`\r\n\r\n    const handlePageClick = (e) => {\r\n        let selectedPage = e.selected + 1\r\n        props.setCurrentPage(selectedPage)\r\n    }\r\n\r\n    return (\r\n        <div className={'reposDataContainer'}>\r\n            <div className={'reposContainer'} key={props.numRepos}>\r\n                <span className={'repos'}>Repositories({props.numRepos})</span>\r\n                {\r\n                    props.reposData.repos.map(repo => {\r\n                        return <div className={'repo'} key={repo.id}>\r\n                            <a href={repo.html_url} target=\"_blank\" without rel=\"noreferrer\"\r\n                               className={'repoName'}>{repo.name}</a>\r\n                            <div className={'repoDescription'}>{repo.description}</div>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n            <div className={'paginContainer'}>\r\n                <div className={'paginItems'}>\r\n                    {items}\r\n                </div>\r\n                    <ReactPaginate\r\n                        containerClassName={'pagination'}\r\n                        activeClassName={'active'}\r\n                        previousLabel={'<'}\r\n                        previousLinkClassName={'arrowLinks'}\r\n                        nextLabel={'>'}\r\n                        nextLinkClassName={'arrowLinks'}\r\n                        breakClassName={'break-me'}\r\n                        pageCount={pageCount}\r\n                        marginPagesDisplayed={1}\r\n                        pageRangeDisplayed={2}\r\n                        onPageChange={handlePageClick}\r\n                        subContainerClassName={\"pages pagination\"}\r\n                        forcePage={props.reposData.currentPage - 1}\r\n                    />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import '../styles/some.scss'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nexport function Status(props) {\r\n\r\n    const statusMessage = props.errors.fetchUserError\r\n        ? 'User not found'\r\n        : props.errors.fetchReposError\r\n            ? 'Repository is empty'\r\n            : 'Start with searching a GitHub user'\r\n\r\n    return (\r\n        <div className={'status'}>\r\n            <FontAwesomeIcon className={'icon'} icon={props.faIcon}/>\r\n            <span className={'statusMessage'}>{statusMessage}</span>\r\n        </div>\r\n    )\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchReposTC, setCurrentPageAC} from \"../state/reposReducer\";\r\nimport {useEffect} from \"react\";\r\nimport {Preloader} from \"./Preloader\";\r\nimport {Repos} from \"./Repos\";\r\nimport {Status} from \"./Status\";\r\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nexport function ReposContainer() {\r\n\r\n    const userData = useSelector(state => state.user)\r\n    const reposData = useSelector(state => state.repos)\r\n    const errors = useSelector(state => state.errors)\r\n    const status = useSelector(state => state.status)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchReposTC(userData.user.login, reposData.perPage, reposData.currentPage))\r\n    }, [dispatch, userData.user.login, reposData.currentPage, reposData.perPage])\r\n\r\n    const setCurrentPage = (numPage) => {\r\n        dispatch(setCurrentPageAC(numPage))\r\n    }\r\n\r\n    return (\r\n        <div className={'reposData'}>\r\n            {\r\n                status.isFetchingRepos\r\n                    ? <div className={'loaderContainer'}><Preloader/></div>\r\n                    : !errors.fetchReposError\r\n                    ? <Repos reposData={reposData}\r\n                             numRepos={userData.user.public_repos}\r\n                             setCurrentPage={setCurrentPage}\r\n                    />\r\n                    : <Status errors={errors}\r\n                              faIcon={faTimesCircle}/>\r\n            }\r\n        </div>\r\n    )\r\n}","import '../styles/some.scss'\r\nimport {User} from \"./User\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReposContainer} from \"./ReposContainer\";\r\n// import {useEffect} from \"react\";\r\n// import {fetchUserTC} from \"../state/userReducer\";\r\nimport {Status} from \"./Status\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nexport function UserContainer() {\r\n\r\n    const userData = useSelector(state => state.user)\r\n    const errors = useSelector(state => state.errors)\r\n    // const dispatch = useDispatch()\r\n\r\n    // useEffect(() => {\r\n    //     if (userData.userName !== '') {\r\n    //         dispatch(fetchUserTC(userData.userName))\r\n    //     }\r\n    // }, [dispatch, userData.userName, userData.user, userData])\r\n\r\n    return (\r\n        <div className={userData.user.id ? 'body' : 'statusContainer'}>\r\n            {\r\n                userData.user.id\r\n                    ? <>\r\n                        <User userData={userData}/>\r\n                        <ReposContainer/>\r\n                    </>\r\n                    : <div className={'status'}>\r\n                        <Status\r\n                            errors={errors}\r\n                            faIcon={faSearch}/>\r\n                    </div>\r\n            }\r\n        </div>)\r\n}","import {githubApi} from \"../api/githubApi\";\r\nimport {setFetchUserErrorAC} from \"./errorsReducer\";\r\nimport {isFetchingUserAC} from \"./statusReducer\";\r\n\r\n\r\nconst initialState = {\r\n    user: {},\r\n    userName: ''\r\n}\r\n\r\nconst SET_USER = 'SET_USER'\r\nconst SET_USER_NAME = 'SET_USER_NAME'\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        case SET_USER_NAME:\r\n            return {\r\n                ...state,\r\n                userName: action.userName\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserAC = (user) => {\r\n    return {type: SET_USER, user}\r\n}\r\nexport const setUserNameAC = (userName) => {\r\n    return {type: SET_USER_NAME, userName}\r\n}\r\n\r\nexport const fetchUserTC = (userName) => (dispatch) => {\r\n    dispatch(isFetchingUserAC(true))\r\n    return githubApi.getUser(userName)\r\n        .then(res => {\r\n            if (res.data.login === userName) {\r\n                dispatch(setUserAC(res.data))\r\n                dispatch(setFetchUserErrorAC(false))\r\n                dispatch(isFetchingUserAC(false))\r\n            }\r\n        })\r\n        .catch(() => {\r\n            dispatch(setUserAC({}))\r\n            dispatch(setFetchUserErrorAC(true))\r\n            dispatch(isFetchingUserAC(false))\r\n        })\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\n\r\n\r\nexport const EnterField = (props) => {\r\n\r\n    let [title, setTitle] = useState('Enter GitHub username')\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n        setTitle('')\r\n    }\r\n    const changeHandler = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n    const keyPressHandler = (event) => {\r\n        if (event.key === 'Enter') {\r\n            if (title.trim() !== '') {\r\n                props.setUserName(title.toLocaleLowerCase())\r\n            } else {\r\n                setTitle('Title is required')\r\n                setEditMode(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        editMode\r\n            ? <input className={'inputField'}\r\n                     value={title}\r\n                     onChange={changeHandler}\r\n                     onKeyPress={keyPressHandler}\r\n                     autoFocus\r\n            />\r\n            : <>\r\n                <span onClick={activateEditMode}>{title}</span>\r\n            </>\r\n    )\r\n}\r\n","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faGithubSquare} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {EnterField} from \"./EnterField\";\r\n\r\n\r\nexport function Header(props) {\r\n    return (\r\n        <>\r\n            <div className={'baseColor'}>\r\n                <FontAwesomeIcon className={'githubIcon'}\r\n                                 icon={faGithubSquare}/>\r\n            </div>\r\n            <div className={'searchContainer'}>\r\n                <FontAwesomeIcon className={'search'}\r\n                                 icon={faSearch}/>\r\n                <EnterField setUserName={props.setUserName}/>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}","import {useDispatch} from \"react-redux\";\r\nimport {fetchUserTC} from \"../state/userReducer\";\r\nimport {Header} from \"./Header\";\r\n\r\n\r\nexport function HeaderContainer() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setUserName = (userName) => {\r\n        dispatch(fetchUserTC(userName))\r\n    }\r\n\r\n    return (\r\n        <Header setUserName={setUserName}/>\r\n    )\r\n}","import './styles/general.scss';\r\nimport {useSelector} from \"react-redux\";\r\nimport {UserContainer} from \"./components/UserContainer\";\r\nimport {Preloader} from \"./components/Preloader\";\r\nimport {HeaderContainer} from \"./components/HeaderContainer\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const status = useSelector(state => state.status)\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"header\">\r\n                <HeaderContainer/>\r\n            </div>\r\n            <div className={status.isFetchingUser ? 'loaderContainer' : ''}>\r\n                {\r\n                    status.isFetchingUser\r\n                        ? <Preloader/>\r\n                        : <UserContainer/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport {userReducer} from \"./userReducer\";\r\nimport {reposReducer} from \"./reposReducer\";\r\nimport {errorsReducer} from \"./errorsReducer\";\r\nimport {statusReducer} from \"./statusReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    repos: reposReducer,\r\n    errors: errorsReducer,\r\n    status: statusReducer\r\n})\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./state/store\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}